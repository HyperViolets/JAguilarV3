#pragma checksum "/home/juan/Documents/Programming/JAv3Code/JAguilarV3/Pages/Blog/Networking/SSHAndSFTPWithLinux.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b3e6d932e3c2808c9d1a2e5c312e17c11f265be8"
// <auto-generated/>
#pragma warning disable 1591
namespace JAguilarV3.Pages.Blog.Networking
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/home/juan/Documents/Programming/JAv3Code/JAguilarV3/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/juan/Documents/Programming/JAv3Code/JAguilarV3/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/home/juan/Documents/Programming/JAv3Code/JAguilarV3/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/juan/Documents/Programming/JAv3Code/JAguilarV3/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/home/juan/Documents/Programming/JAv3Code/JAguilarV3/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/home/juan/Documents/Programming/JAv3Code/JAguilarV3/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/home/juan/Documents/Programming/JAv3Code/JAguilarV3/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/home/juan/Documents/Programming/JAv3Code/JAguilarV3/_Imports.razor"
using JAguilarV3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/home/juan/Documents/Programming/JAv3Code/JAguilarV3/_Imports.razor"
using JAguilarV3.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Blog/Networking/SSHAndSFTPWithLinux")]
    public partial class SSHAndSFTPWithLinux : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<title>SSH & SFTP With Linux</title>\n\n<br>\n\n");
            __builder.AddMarkupContent(1, "<div class=\"pageFrame\">\n\n    <br>\n\n    <hr>\n    <h2 class=\"articleTitle\">SSH & SFTP with Linux</h2>\n\n    <p class=\"generalText\"><strong>By Juan Aguilar</strong></p>\n    <p class=\"generalText\"><em>Updated: June 9, 2019</em></p>\n    <hr>\n\n    <br>\n\n    <h4 class=\"articleTitle\">What Is SSH?</h4>\n    <p class=\"generalText\">\n        SSH stands for Secure Shell. SSH was designed to replace protocols like Telnet as a secure alternative. Telnet and similar protocols would send data in plain text. SSH solves this issue by encrypting the data. SSH is a tool for remote administration. It opens a shell prompt for executing shell commands on the remote machine. For a large majority of Linux machines, OpenSSH is built-in. Windows machines can use SSH by installing an application like PuTTY. SSH listens on port 22 by default, but you can change it.\n    </p>\n\n    <h4 class=\"articleTitle\">Using SSH</h4>\n    <p class=\"generalText\">\n        On Linux, you open an SSH connection by typing this command in a terminal: <strong>ssh {user}&#64{host}</strong>. The \"user\" is the name of the user on the remote machine you want to use. The \"host\" is the IP address or Domain Name of the remote machine. This opens an encrypted connection.\n    </p>\n\n    <h4 class=\"articleTitle\">Authenticating</h4>\n    <p class=\"generalText\">\n        When you run the ssh command, you have to authenticate the remote user  . There are three ways to authenticate.\n    </p>\n    <ul>\n        <li class=\"bulletPointGeneralText\">Password Authentication: You input the password for the  remote account you\'re using to access the remote machine.</li>\n        <li class=\"bulletPointGeneralText\">SSH Key with Passphrase: You input the passphrase (password) of the SSH Key instead of the password for the remote account.</li>\n        <li class=\"bulletPointGeneralText\">SSH Key With No Passphrase: You aren\'t required to input anything. The SSH connection with automatically detect your SSH Key and authenticate itself.</li>\n    </ul>\n\n    <h4 class=\"articleTitle\">SSH Keys</h4>\n    <p class=\"generalText\">\n        SSH keys are an alternative to Password Authentication on the remote account. SSH keys are composed of a public and private key. The public key is used for encrypting data and the private key is used for decrypting data. It\'s important to keep the private key private because it\'s a security concern. The public key is meant to be given out to people so they can encrypt messages going to you. SSH keys are recommended to use. They don\'t solely rely on a password. SSH keys don\'t expire so keep that in mind. SSH keys are stored on the machine so if your machine gets stolen then the private key is also gone.\n    </p>\n\n    <h4 class=\"articleTitle\">Generating SSH Keys</h4>\n    <ol>\n        <li class=\"bulletPointGeneralText\"> Run this command on the local machine: <strong>ssh-keygen -t rsa</strong> <ul><li>It\'s recommended to create the keys in the default file path.</li><li>You can include a passphrase which has to be inputted each time you SSH into the remote machine.</li></ul></li>\n        <li class=\"bulletPointGeneralText\"> Copy the public SSH key to the remote machine with: <strong>ssh-copy-id {user}&#64{host}</strong><ul><li>The \"user\" and \"host\" will be the remote machine</li></ul></li>\n        <li class=\"bulletPointGeneralText\"> That\'s it! Now you can run the SSH command as usual.</li>\n    </ol>\n    <p class=\"generalText\">\n        SSH keys are stored in <strong>~/.ssh/authorized_key</strong>. Known hosts are stored in <strong>~/.ssh/known_hosts</strong>. If the keys already exist in the file path then they will be overwritten.\n    </p>\n\n    <h4 class=\"articleTitle\">How Encryption Is Used</h4>\n    <p class=\"generalText\">\n        SSH uses symmetric and asymmetric encryption. Hashing is also used to make sure the received data is intact and unmodified.\n    </p>\n    <ul>\n        <li class=\"bulletPointGeneralText\">\n            Symmetric: using the same key to encrypt and decrypt\n            <ul>\n                <li>Faster, more efficient, and carries more data</li>\n                <li>Examples: Blowfish, AES, RC4, DES, RC5</li>\n            </ul>\n        </li>\n        <li class=\"bulletPointGeneralText\">\n            Asymmetric: using a public key to encrypt and a private key to decrypt.\n            <ul>\n                <li>The public key is shared among other machines to encrypt data.</li>\n                <li>The private key is shared with NO ONE and is used to decrypt data that was encrypted with your public key.</li>\n                <li>Slower process compared to symmetric encryption</li>\n                <li>Examples: Diffie-Hellman, RSA, ECC, DSA</li>\n            </ul>\n        </li>\n    </ul>\n    <p class=\"generalText\">\n        SSH actually uses symmetric encryption for the session and password authentication when no SSH key is present. That\'s because symmetric is faster than asymmetric. Asymmetric encryption is used to send the public keys for symmetric encryption when the SSH connection is created. Asymmetric encryption is also used for SSH Key authentication.\n    </p>\n\n    <h4 class=\"articleTitle\">SFTP</h4>\n    <p class=\"generalText\">\n        SFTP stands for SSH File Transfer Protocol or Secure File Transfer Protocol. SFTP is part of the SSH protocol and in-turn uses similar mechanisms. It\'s used to transfer files from one computer to another while in an SSH session. It uses the same SSH keys or password authentication. If you have SSH keys for SSH then those same keys will work for SFTP.\n    </p>\n    <p class=\"generalText\">\n        You start an SFTP session with: <strong>sftp {user}&#64{host}</strong>. It\'s works the same as SSH. SFTP also uses port 22 by default, but you can change it. Once in the SFTP session, you will be in the remote directory. You can use commands like pwd, ls, cd, mkdir, rename, rm, chmod, chown and others in the remote directory. To use commands in your local directory, you will prefix the commands with an \"L\". Example: lpwd, lls, lcd, lmkdir, lrename, and so on. Make sure you have write/read permissions on the remote computer.\n    </p>\n    <p class=\"generalText\">\n        There are GUI interfaces for SFTP like WinSCP and FileZilla. However, I\'ll only go over the command line commands this time. With command line, the SFTP session will have <strong>sftp></strong> prefixed. This is how you know you\'re in an SFTP session. To download files from the remote computer you will use: <strong>get {filename}</strong>. To upload files use: <strong>put {filename}</strong>. To get or put a directory use: <strong>get -r {directory name}</strong> or <strong>put -r {directory name}</strong>. You can rename a file/directory by using: <strong>get {current name} {new name}</strong> or <strong>put {current name} {new name}</strong>. If the transfer fails use <strong>reget {filename}</strong> or <strong>reput {filename}</strong> to resume it. Use <strong>df</strong> to display statistics of the remote disk usage. For more help on SFTP commands type <strong>help</strong> or <strong>?</strong>.\n\n    </p>\n\n    <h4 class=\"articleTitle\">References</h4>\n    <p class=\"citation\">\n        Ellingwood, Justin. “Understanding the SSH Encryption and Connection Process.” <em>DigitalOcean</em>, DigitalOcean, 22 Oct. 2014, www.digitalocean.com/community/tutorials/understanding-the-ssh-encryption-and-connection-process#symmetric-encryption,-asymmetric-encryption,-and-hashes.\n    </p>\n    <p class=\"citation\">\n        L., Linas. “How to Connect to Your Account Using PuTTy SSH Terminal.” <em>Hostinger Tutorials</em>, Hostinger Tutorials, 11 Oct. 2018, www.hostinger.com/tutorials/how-to-connect-to-your-account-using-putty.\n    </p>\n    <p class=\"citation\">\n        Ladia, Aman. “SSH Tutorial for Beginners - How Does SSH Work.” <em>Hostinger Tutorials</em>, Hostinger Tutorials, 10 Nov. 2017, www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work.\n    </p>\n    <p class=\"citation\">\n        “Symmetric vs. Asymmetric Encryption – What Are Differences?” <em>SSL2BUY</em> , 7 Feb. 2019, www.ssl2buy.com/wiki/symmetric-vs-asymmetric-encryption-what-are-differences.\n    </p>\n    <p class=\"citation\">\n        V., Tautvydas. “How to Set Up SSH Keys.” <em>Hostinger Tutorials</em>, Hostinger Tutorials, 4 Feb. 2019, www.hostinger.com/tutorials/ssh/how-to-set-up-ssh-keys.\n    </p>\n    <p class=\"citation\">\n        “How to Use Linux SFTP Command to Transfer Files.” <em>Linuxize</em>, 17 Nov. 2018, linuxize.com/post/how-to-use-linux-sftp-command-to-transfer-files/.\n    </p>\n\n    <br>\n</div>\n\n<br>\n<br>");
        }
        #pragma warning restore 1998
    }
}
#pragma warning restore 1591
