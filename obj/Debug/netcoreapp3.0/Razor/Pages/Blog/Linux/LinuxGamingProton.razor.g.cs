#pragma checksum "/home/juan/Documents/Developing/JAguilarV3/Pages/Blog/Linux/LinuxGamingProton.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0c385b8c0648241479b673fe1cb7d534d763d23f"
// <auto-generated/>
#pragma warning disable 1591
namespace JAguilarV3.Pages.Blog.Linux
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/home/juan/Documents/Developing/JAguilarV3/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/juan/Documents/Developing/JAguilarV3/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/home/juan/Documents/Developing/JAguilarV3/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/juan/Documents/Developing/JAguilarV3/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/home/juan/Documents/Developing/JAguilarV3/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/home/juan/Documents/Developing/JAguilarV3/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/home/juan/Documents/Developing/JAguilarV3/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/home/juan/Documents/Developing/JAguilarV3/_Imports.razor"
using JAguilarV3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/home/juan/Documents/Developing/JAguilarV3/_Imports.razor"
using JAguilarV3.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Blog/Linux/LinuxGamingProton")]
    public class LinuxGamingProton : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<title>Linux Gaming: Proton</title>\n\n<br>\n\n");
            __builder.AddMarkupContent(1, "<div class=\"pageFrame\">\n\n    <br>\n\n    <hr>\n    <h2 class=\"articleTitle\">Linux Gaming: Proton</h2>\n\n    <p class=\"generalText\"><strong>By Juan Aguilar</strong></p>\n    <p class=\"generalText\"><em>June 13, 2019</em></p>\n    <hr>\n\n    <br>\n\n    <h4 class=\"articleTitle\">Proton</h4>\n    <p class=\"generalText\">\n        Proton is software released by Valve Corporation that let\'s you play Windows games on Linux through Steam Play. A large chunk of PC video games only work on Windows. Valve wants to tap into the Linux market and make video games available on Linux. Proton was officially released on August 21, 2018. As of now, the technology is in it\'s infancy, but has gained a lot of traction. Proton is completely open source and you can check out the code at their <a href=\"https://github.com/ValveSoftware/Proton/\" target=\"_blank\">GitHub</a>.\n    </p>\n    <p class=\"generalText\">\n        One way to check which games are compatible with Linux is going to <a href=\"https://www.protondb.com/\" target=\"_blank\">ProtonDB\'s</a> website. ProtonDB is run by volunteers who keep track of Windows games that can be played on Linux through Proton. They do this with reports from volunteers who try out Proton. Fun Fact: ProtonDB started off as a Google Spreadsheet made by volunteers until it got too big and they decided to create a website. ProtonDB\'s old name used to be SPCR (Steam Play Compatibility Reports). Besides ProtonDB, Steam has whitelisted a few Windows games that work completely fine on Linux with Proton. To get Proton up and running follow this <a href=\"https://www.youtube.com/watch?v=N7r6DvzF7_8\" target=\"_blank\">guide</a>.\n    </p>\n\n    <h4 class=\"articleTitle\">How Proton Works</h4>\n    <p class=\"generalText\">\n        Proton makes Windows games available on Linux through a customized version of Wine. Wine is a very popular tool used to run Windows applications on Linux. Wine is an acronym for \"Wine Is Not an Emulator\". VMs and emulators simulate internal Windows logic to run applications. However, Wine doesn\'t do this. It translates Windows API calls into POSIX calls that can be used by other Operating Systems like Linux, macOS, and BSD. Proton also uses vkd3d and DXVK which are Direct3D 12/11/10 implementations based on Vulkan. Proton maintains Wine and other tools for you which is usually the most complicated part to start gaming on Linux. So far, Proton only works with the Steam client. You can use <a href=\"https://lutris.net/\" target=\"_blank\">Lutris</a> to run other clients like GOG, Origin, Uplay, and etc. on Linux. Lutris also uses Wine to run video games on Linux.\n    </p>\n\n    <h4 class=\"articleTitle\">Converting Windows Games to Linux</h4>\n    <p class=\"generalText\">\n        The performance of Linux games is dictated by the API translation. An API (Application Programming Interface) is used to help applications access things like the hardware, operating systems, services, and et cetera of a PC. A video game API helps the game engine interface with the hardware of the PC like the GPU and CPU. Most Windows games use the Direct3D API to run games. To work on Linux, the Direct3D API calls need to be translated. This translation increases the memory needed and decreases performance.\n    </p>\n\n    <h4 class=\"articleTitle\">What is Direct3D?</h4>\n    <p class=\"generalText\">\n        Direct3D is an API used for graphics. It\'s mostly used in Windows games and Xbox games. That\'s because it was developed by Microsoft. Direct3D is actually part of a collection of APIs called DirectX. DirectX includes Direct3D, DirectDraw, DirectMusic, DirectPlay, DirectSound and so on. The latest version of Direct3D is 12. DirectX only works with Microsoft products like the Xbox and Windows.\n    </p>\n    <p class=\"generalText\">\n        Another API is Metal. It was created by Apple to be used on iOS, macOS, and tvOS. As expected, Metal only works with Apple operating systems.\n    </p>\n\n    <h4 class=\"articleTitle\">Vulkan</h4>\n    <p class=\"generalText\">\n        Proton works best with video games created with the Vulkan API. Vulkan supports Linux natively. Thus, there is no need for the API translation and there is no memory or performance penalties. Vulkan is being developed by Khronos Group. The foundations of Vulkan came from the Mantle API developed by AMD. AMD gave the Mantle API to Khronos Group so they could quickly make an API used for cross platform video games. Vulkan is also based on OpenGL. OpenGL was also cross platform. Vulkan can run on Windows 7/8/10, Linux, Android, Tizen, and iOS/macOS (with third-party support). The Vulkan project is also open source. Performance of Vulkan is basically on par with Direct3D 12. Check out <a href=\"https://www.khronos.org/vulkan/\" target=\"_blank\">Vulkan\'s</a> website to know which game engines support Vulkan and other info on Vulkan.\n    </p>\n\n    <h4 class=\"articleTitle\">References</h4>\n    <p class=\"citation\">\n        “About Wine.” <em>WineHQ</em>, 13 June 2019, www.winehq.org/about.\n    </p>\n    <p class=\"citation\">\n        Comandon, Mathieu. “Play All Your Games on Linux.” <em>Lutris</em>, 13 June 2019, lutris.net/.\n    </p>\n    <p class=\"citation\">\n        “DirectX.” <em>Wikipedia</em>, Wikimedia Foundation, 11 June 2019, en.wikipedia.org/wiki/DirectX.\n    </p>\n    <p class=\"citation\">\n        gameranx. “What Is Vulkan & Why Should Gamers CARE?” <em>YouTube</em>, 30 Apr. 2016, youtu.be/dvioALNs_Bc.\n    </p>\n    <p class=\"citation\">\n        Griffais, Pierre-Loup A. “Steam for Linux :: Introducing a New Version of Steam Play.” <em>Steam Community</em>, 21 Aug. 2018, steamcommunity.com/games/221410/announcements/detail/1696055855739350561.\n    </p>\n    <p class=\"citation\">\n        Level1Linux. “VLOG: Linux Gaming Experiments Update: Manjaro as a Gaming OS?” <em>YouTube</em>, 19 Apr. 2019, youtu.be/LVYWi9suqGQ.\n    </p>\n    <p class=\"citation\">\n        “OpenGL.” <em>Wikipedia</em>, Wikimedia Foundation, 29 May 2019, en.wikipedia.org/wiki/OpenGL#Vulkan.\n    </p>\n    <p class=\"citation\">\n        “ProtonDB.” <em>Protondb.com</em>, 13 June 2019, www.protondb.com/.\n    </p>\n    <p class=\"citation\">\n        “ProtonDB.” <em>Protondb.com</em>, 13 June 2019, www.protondb.com/help/troubleshooting-faq.\n    </p>\n    <p class=\"citation\">\n        “r/linux_gaming - Guide: Migrating to Linux in 2019.” <em>Reddit</em>, 13 June 2019, www.reddit.com/r/linux_gaming/comments/9oqq3w/guide_migrating_to_linux_in_2019/.\n    </p>\n    <p class=\"citation\">\n        TLG // The Linux Gamer. “How to Set up STEAM on LINUX & Steam Play | Linux Literate.” <em>YouTube</em>, 10 Sept. 2018, youtu.be/N7r6DvzF7_8.\n    </p>\n    <p class=\"citation\">\n        TLG // The Linux Gamer. “What Is Vulkan? A Brief History | Linux Literate.” <em>YouTube</em>, 3 Sept. 2018, youtu.be/9m1cKCBAW3s.\n    </p>\n    <p class=\"citation\">\n        “ValveSoftware/Proton.” <em>GitHub</em>, 10 June 2019, github.com/ValveSoftware/Proton/.\n    </p>\n    <p class=\"citation\">\n        “Vulkan (API).” <em>Wikipedia</em>, Wikimedia Foundation, 6 June 2019, en.wikipedia.org/wiki/Vulkan_(API)#Compatibility.\n    </p>\n    <p class=\"citation\">\n        “Vulkan - Industry Forged.” <em>The Khronos Group</em>, 2 Mar. 2015, www.khronos.org/vulkan/.\n    </p>\n    \n    <br>\n</div>\n\n<br>\n<br>");
        }
        #pragma warning restore 1998
    }
}
#pragma warning restore 1591
